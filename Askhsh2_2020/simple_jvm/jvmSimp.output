Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: "start" T_id $@1 stmts "end"

    3 stmts: '(' stmt ')'
    4      | '(' stmt ')' stmts
    5      | '(' error ')' stmts

    6 stmt: asmt
    7     | printcmd

    8 printcmd: "print" expr

    9 asmt: T_id expr

   10 unary_expression: '(' "++" T_id ')'
   11                 | '(' T_id "++" ')'

   12 expr: T_num
   13     | T_real
   14     | T_id
   15     | '(' expr ')'
   16     | expr expr '+'
   17     | expr expr '*'
   18     | unary_expression
   19     | '(' "int" expr ')'
   20     | '(' "float" expr ')'
   21     | '-' T_num
   22     | '-' T_real
   23     | expr "abs"


Terminals, with rules where they appear

$end (0) 0
'(' (40) 3 4 5 10 11 15 19 20
')' (41) 3 4 5 10 11 15 19 20
'*' (42) 17
'+' (43) 16
'-' (45) 21 22
error (256) 5
T_num (258) 12 21
T_real (259) 13 22
T_id (260) 2 9 10 11 14
"start" (261) 2
"end" (262) 2
"print" (263) 8
"int" (264) 19
"float" (265) 20
"++" (266) 10 11
"abs" (267) 23


Nonterminals, with rules where they appear

$accept (18)
    on left: 0
program (19)
    on left: 2, on right: 0
$@1 (20)
    on left: 1, on right: 2
stmts (21)
    on left: 3 4 5, on right: 2 4 5
stmt (22)
    on left: 6 7, on right: 3 4
printcmd (23)
    on left: 8, on right: 7
asmt (24)
    on left: 9, on right: 6
unary_expression (25)
    on left: 10 11, on right: 18
expr (26)
    on left: 12 13 14 15 16 17 18 19 20 21 22 23, on right: 8 9 15
    16 17 19 20 23


State 0

    0 $accept: . program $end

    "start"  shift, and go to state 1

    program  go to state 2


State 1

    2 program: "start" . T_id $@1 stmts "end"

    T_id  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    2 program: "start" T_id . $@1 stmts "end"

    $default  reduce using rule 1 ($@1)

    $@1  go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    2 program: "start" T_id $@1 . stmts "end"

    '('  shift, and go to state 6

    stmts  go to state 7


State 6

    3 stmts: '(' . stmt ')'
    4      | '(' . stmt ')' stmts
    5      | '(' . error ')' stmts

    error    shift, and go to state 8
    T_id     shift, and go to state 9
    "print"  shift, and go to state 10

    stmt      go to state 11
    printcmd  go to state 12
    asmt      go to state 13


State 7

    2 program: "start" T_id $@1 stmts . "end"

    "end"  shift, and go to state 14


State 8

    5 stmts: '(' error . ')' stmts

    ')'  shift, and go to state 15


State 9

    9 asmt: T_id . expr

    T_num   shift, and go to state 16
    T_real  shift, and go to state 17
    '('     shift, and go to state 18
    T_id    shift, and go to state 19
    '-'     shift, and go to state 20

    unary_expression  go to state 21
    expr              go to state 22


State 10

    8 printcmd: "print" . expr

    T_num   shift, and go to state 16
    T_real  shift, and go to state 17
    '('     shift, and go to state 18
    T_id    shift, and go to state 19
    '-'     shift, and go to state 20

    unary_expression  go to state 21
    expr              go to state 23


State 11

    3 stmts: '(' stmt . ')'
    4      | '(' stmt . ')' stmts

    ')'  shift, and go to state 24


State 12

    7 stmt: printcmd .

    $default  reduce using rule 7 (stmt)


State 13

    6 stmt: asmt .

    $default  reduce using rule 6 (stmt)


State 14

    2 program: "start" T_id $@1 stmts "end" .

    $default  reduce using rule 2 (program)


State 15

    5 stmts: '(' error ')' . stmts

    '('  shift, and go to state 6

    stmts  go to state 25


State 16

   12 expr: T_num .

    $default  reduce using rule 12 (expr)


State 17

   13 expr: T_real .

    $default  reduce using rule 13 (expr)


State 18

   10 unary_expression: '(' . "++" T_id ')'
   11                 | '(' . T_id "++" ')'
   15 expr: '(' . expr ')'
   19     | '(' . "int" expr ')'
   20     | '(' . "float" expr ')'

    T_num    shift, and go to state 16
    T_real   shift, and go to state 17
    '('      shift, and go to state 18
    T_id     shift, and go to state 26
    "int"    shift, and go to state 27
    "float"  shift, and go to state 28
    "++"     shift, and go to state 29
    '-'      shift, and go to state 20

    unary_expression  go to state 21
    expr              go to state 30


State 19

   14 expr: T_id .

    $default  reduce using rule 14 (expr)


State 20

   21 expr: '-' . T_num
   22     | '-' . T_real

    T_num   shift, and go to state 31
    T_real  shift, and go to state 32


State 21

   18 expr: unary_expression .

    $default  reduce using rule 18 (expr)


State 22

    9 asmt: T_id expr .
   16 expr: expr . expr '+'
   17     | expr . expr '*'
   23     | expr . "abs"

    T_num   shift, and go to state 16
    T_real  shift, and go to state 17
    '('     shift, and go to state 18
    T_id    shift, and go to state 19
    "abs"   shift, and go to state 33
    '-'     shift, and go to state 20

    $default  reduce using rule 9 (asmt)

    unary_expression  go to state 21
    expr              go to state 34


State 23

    8 printcmd: "print" expr .
   16 expr: expr . expr '+'
   17     | expr . expr '*'
   23     | expr . "abs"

    T_num   shift, and go to state 16
    T_real  shift, and go to state 17
    '('     shift, and go to state 18
    T_id    shift, and go to state 19
    "abs"   shift, and go to state 33
    '-'     shift, and go to state 20

    $default  reduce using rule 8 (printcmd)

    unary_expression  go to state 21
    expr              go to state 34


State 24

    3 stmts: '(' stmt ')' .
    4      | '(' stmt ')' . stmts

    '('  shift, and go to state 6

    $default  reduce using rule 3 (stmts)

    stmts  go to state 35


State 25

    5 stmts: '(' error ')' stmts .

    $default  reduce using rule 5 (stmts)


State 26

   11 unary_expression: '(' T_id . "++" ')'
   14 expr: T_id .

    "++"  shift, and go to state 36

    $default  reduce using rule 14 (expr)


State 27

   19 expr: '(' "int" . expr ')'

    T_num   shift, and go to state 16
    T_real  shift, and go to state 17
    '('     shift, and go to state 18
    T_id    shift, and go to state 19
    '-'     shift, and go to state 20

    unary_expression  go to state 21
    expr              go to state 37


State 28

   20 expr: '(' "float" . expr ')'

    T_num   shift, and go to state 16
    T_real  shift, and go to state 17
    '('     shift, and go to state 18
    T_id    shift, and go to state 19
    '-'     shift, and go to state 20

    unary_expression  go to state 21
    expr              go to state 38


State 29

   10 unary_expression: '(' "++" . T_id ')'

    T_id  shift, and go to state 39


State 30

   15 expr: '(' expr . ')'
   16     | expr . expr '+'
   17     | expr . expr '*'
   23     | expr . "abs"

    T_num   shift, and go to state 16
    T_real  shift, and go to state 17
    '('     shift, and go to state 18
    ')'     shift, and go to state 40
    T_id    shift, and go to state 19
    "abs"   shift, and go to state 33
    '-'     shift, and go to state 20

    unary_expression  go to state 21
    expr              go to state 34


State 31

   21 expr: '-' T_num .

    $default  reduce using rule 21 (expr)


State 32

   22 expr: '-' T_real .

    $default  reduce using rule 22 (expr)


State 33

   23 expr: expr "abs" .

    $default  reduce using rule 23 (expr)


State 34

   16 expr: expr . expr '+'
   16     | expr expr . '+'
   17     | expr . expr '*'
   17     | expr expr . '*'
   23     | expr . "abs"

    T_num   shift, and go to state 16
    T_real  shift, and go to state 17
    '('     shift, and go to state 18
    T_id    shift, and go to state 19
    '+'     shift, and go to state 41
    '*'     shift, and go to state 42
    "abs"   shift, and go to state 33
    '-'     shift, and go to state 20

    unary_expression  go to state 21
    expr              go to state 34


State 35

    4 stmts: '(' stmt ')' stmts .

    $default  reduce using rule 4 (stmts)


State 36

   11 unary_expression: '(' T_id "++" . ')'

    ')'  shift, and go to state 43


State 37

   16 expr: expr . expr '+'
   17     | expr . expr '*'
   19     | '(' "int" expr . ')'
   23     | expr . "abs"

    T_num   shift, and go to state 16
    T_real  shift, and go to state 17
    '('     shift, and go to state 18
    ')'     shift, and go to state 44
    T_id    shift, and go to state 19
    "abs"   shift, and go to state 33
    '-'     shift, and go to state 20

    unary_expression  go to state 21
    expr              go to state 34


State 38

   16 expr: expr . expr '+'
   17     | expr . expr '*'
   20     | '(' "float" expr . ')'
   23     | expr . "abs"

    T_num   shift, and go to state 16
    T_real  shift, and go to state 17
    '('     shift, and go to state 18
    ')'     shift, and go to state 45
    T_id    shift, and go to state 19
    "abs"   shift, and go to state 33
    '-'     shift, and go to state 20

    unary_expression  go to state 21
    expr              go to state 34


State 39

   10 unary_expression: '(' "++" T_id . ')'

    ')'  shift, and go to state 46


State 40

   15 expr: '(' expr ')' .

    $default  reduce using rule 15 (expr)


State 41

   16 expr: expr expr '+' .

    $default  reduce using rule 16 (expr)


State 42

   17 expr: expr expr '*' .

    $default  reduce using rule 17 (expr)


State 43

   11 unary_expression: '(' T_id "++" ')' .

    $default  reduce using rule 11 (unary_expression)


State 44

   19 expr: '(' "int" expr ')' .

    $default  reduce using rule 19 (expr)


State 45

   20 expr: '(' "float" expr ')' .

    $default  reduce using rule 20 (expr)


State 46

   10 unary_expression: '(' "++" T_id ')' .

    $default  reduce using rule 10 (unary_expression)
